def test_generate_figure1():
	t = np.arange(0.0, 5.0, 0.01)
	s1 = np.sin(2*np.pi*t)
	s2 = np.sin(4*np.pi*t)
	fig = plt.figure(figsize=(8,6))
	axes1 = plt.subplot(211)
	axes1.set_title('Sin(2*pi*x)')
	axes1.plot(t,s1)
	axes2 = plt.subplot(212,sharex=axes1,sharey=axes1)
	axes2.set_title('Sin(4*pi*x)')
	axes2.plot(t,s2)
	plt.savefig('testfigure1.png')
test_generate_figure1()

def test_generate_figure2():
	np.random.seed(1000)
	x = np.random.rand(10)
	y = np.random.rand(10)
	z = np.sqrt(x**2 + y**2)
	fig = plt.figure(figsize=(8,6))
	axes1 = plt.subplot(221)
	axes1.set_title('Scatter plot with Upper Traingle Markers')
	axes1.scatter(x,y,s=[80],c=z,marker='^')
	axes1.set(xticks=[0.0, 0.4, 0.8, 1.2],yticks=[-0.2, 0.2, 0.6, 1.0 ])
	axes2 = plt.subplot(222)
	axes2.set_title('Scatter plot with Plus Markers')
	axes2.scatter(x,y,s=[80],c=z,marker='+')
	axes2.set(xticks=[0.0, 0.4, 0.8, 1.2],yticks=[-0.2, 0.2, 0.6, 1.0 ])
	axes3 = plt.subplot(223)
	axes3.set_title('Scatter plot with Circle Markers')
	axes3.scatter(x,y,s=[80],c=z,marker='o')
	axes3.set(xticks=[0.0, 0.4, 0.8, 1.2],yticks=[-0.2, 0.2, 0.6, 1.0 ])
	axes4 = plt.subplot(224)
	axes4.set_title('Scatter plot with Diamond Markers')
	axes4.scatter(x,y,s=[80],c=z,marker='d')
	axes4.set(xticks=[0.0, 0.4, 0.8, 1.2],yticks=[-0.2, 0.2, 0.6, 1.0 ])
	plt.tight_layout()
	plt.savefig('testfigure2.png')
test_generate_figure2()

def test_generate_figure3():
	x = np.arange(1,101)
	y1 = x
	y2 = x**2
	y3 = x**3
	fig = plt.figure(figsize=(8,6))
	g = gridspec.GridSpec(2,2)
	axes1 = plt.subplot(g[0,0])
	axes1.set(title="y = x")
	axes1.plot(x,y1)
	axes2 = plt.subplot(g[1,0])
	axes2.set(title="y = x**2")
	axes2.plot(x,y2)
	axes3 = plt.subplot(g[:,1])
	axes3.set(title="y = x**3")
	axes3.plot(x,y3)
	plt.tight_layout()
	plt.savefig('testfigure3.png')
test_generate_figure3()