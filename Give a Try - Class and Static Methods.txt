import os
import sys

#Add Circle class implementation below
class Circle:
    no_of_circles = 0
    def __init__(self,radius):
        self.__radius = radius
        Circle.no_of_circles +=1
    def getCirclesCount(self):
        return Circle.no_of_circles
    @staticmethod
    def square(x):
        return x**2
    def area(self):
        return 3.14*self.square(self.__radius)        
'''Check the Tail section for input/output'''

if __name__ == "__main__":


-----------------------------------------------------------------------

import os
import sys

#Add Circle class implementation here
class Circle:
    pi = 3.14
    count = 0
    def __init__(self,radius):
        self.radius = radius
        self.getCircleCount = self._foo
    
    def _foo(self):
        Circle.count += 1
        return Circle.count

    @classmethod
    def getCircleCount(cls):
        return cls.count
    
    def area(self):
        area = self.radius **2 * Circle.pi
        return area
        
'''Check the Tail section for input/output'''

if __name__ == "__main__":


-------------------------------------------------------------------------
 
import os
import sys
#Add circle class implementation here
class Circle(object):

    no_of_circles = 0

    def __init__(self, radius):

        self.__radius = radius

        Circle.no_of_circles += 1


    
    @classmethod
    def getCircleCount(self):
        
        return Circle.no_of_circles
     
    @staticmethod
    def getPi(self):
       return 3.14
     
           
    def area(self):
      
      return round(self.getPi(self.__radius)*self.__radius*self.__radius,2) 
        
'''Check the Tail section for input/output'''
if __name__ == "__main__":